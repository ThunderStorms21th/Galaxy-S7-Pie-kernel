ui_print("*******************************************************************");
ui_print("                        ThunderStorm Kernel Pie                    ");
ui_print("                         For Samsung Galaxy S7                     ");
ui_print("                Developed by ThundeRStormS Team                    ");
ui_print("                                    TS Team                        ");
ui_print("*******************************************************************");
set_progress(0.01);

# Thanks to @MoRoGoKu for oryginal script


# Copy scripts
package_extract_dir("ts", "/tmp/ts");
package_extract_dir("tsk", "/tmp/tsk");
set_perm_recursive(0, 0, 0777, 0777, "/tmp/ts");
set_perm_recursive(0, 0, 0777, 0777, "/tmp/tsk");

ui_print(" ");
ui_print("@Mounting partitions...");
run_program("/sbin/busybox", "mount", "/system");
run_program("/sbin/busybox", "mount", "/data");
#run_program("/sbin/mount", "-t", "auto", "/system");
#run_program("/sbin/mount", "-t", "auto", "/data");

ui_print(" ");
ui_print("@Flashing kernel...");
if is_substring("G935", getprop("ro.boot.bootloader")) then
	ui_print("-- G935 S7 Edge...");
	run_program("/tmp/ts/flash_kernel.sh", "G935");
	ui_print("-- Done.");
endif;
	
if is_substring("G930", getprop("ro.boot.bootloader")) then
	ui_print("-- G930 S7 Flat...");
	run_program("/tmp/ts/flash_kernel.sh", "G930");
	ui_print("-- Done.");
endif;

ui_print(" ");
ui_print("@ThundeRStormS - System Patching...");
package_extract_dir("/tmp/ts/system", "/system");
package_extract_dir("ts/system", "/system");
run_program("/tmp/ts/del_wakelock.sh"); 

####################################################
# OTHER OPTIONS
####################################################

# Private mode
if file_getprop("/tmp/aroma/menu.prop", "chk9") == "1" then
	ui_print(" ");
	ui_print("@Fix for Private Mode...");
	run_program("/tmp/ts/privatemode.sh");
	package_extract_dir("ts/private_mode", "/system");
endif;

# MTweaks
if file_getprop("/tmp/aroma/menu.prop", "chk3") == "1" then
	ui_print(" ");
	ui_print("@Installing MTweaks App...");
	delete_recursive("/system/app/com.moro.mtweaks*");
	delete_recursive("/system/priv-app/com.moro.mtweaks*");
	delete_recursive("/data/app/com.moro.mtweaks*");
	delete_recursive("/data/data/com.moro.mtweaks*");
	run_program("/tmp/ts/ts_clean.sh", "com.moro.mtweaks*", "-as");
	#package_extract_dir("mtweaks/", "/data/.tskernel/apk");
        package_extract_dir("ts/mtweaks", "/system/app");
        #run_program("/tmp/ts/ts_mtweaks.sh");
endif;

# TS kernel Profiles
if file_getprop("/tmp/aroma/menu.prop", "chk6") == "1" then
	ui_print(" ");
	ui_print("@Installing ThundeRStormS kernel Profiles...");
	run_program("/tmp/ts/tskernel2.sh");
	run_program("/ts/tskernel2.sh");
	package_extract_dir("ts/profiles", "/data/media/0/Spectrum/profiles/");
	package_extract_dir("ts/profiles", "/storage/emulated/0/Spectrum/profiles/");
	package_extract_dir("ts/profiles", "/sdcard/Spectrum/profiles/");
endif;

# TS swap off
if file_getprop("/tmp/aroma/menu.prop", "chk4") == "1" then
	ui_print(" ");
	ui_print("@Installing ThundeRStormS VNSWAP OFF...");
	package_extract_dir("ts/swapoff", "/system/etc/init.d");
	package_extract_dir("/tmp/ts/swapoff", "/system/etc/init.d");
	package_extract_dir("ts/system1", "/system");
endif;

# Patch for deodexed and ported roms
if file_getprop("/tmp/aroma/menu.prop", "chk10") == "1" then
	
	ui_print("@Patching system for ported and deodexed roms");
	ui_print(" ");
	package_extract_dir("tsk", "/tmp/tsk");
	run_program("/sbin/busybox", "unzip", "/tmp/tsk/TS-kernel-deodexed-v1.1.zip", "META-INF/com/google/android/*", "-d", "/tmp/tsk");
	run_program("/sbin/sh", "/tmp/tsk/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/tsk/TS-kernel-deodexed-v1.1.zip");
	delete_recursive("/tmp/tsk");
	run_program("/sbin/busybox", "unzip", "/tmp/tsk/TS-kernel-deodexed-v1.2.zip", "META-INF/com/google/android/*", "-d", "/tmp/tsk");
	run_program("/sbin/sh", "/tmp/tsk/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/tsk/TS-kernel-deodexed-v1.2.zip");
	delete_recursive("/tmp/tsk");
endif;

# Recovery
if file_getprop("/tmp/aroma/menu.prop", "chk8") == "1" then
	ui_print(" ");
	ui_print("@Flashing patched recovery TWRP 3.3.0-0 by AJ's...");
	if is_substring("G935", getprop("ro.boot.bootloader")) then
		ui_print("-- G935 S7 Edge");
		run_program("/tmp/ts/flash_recovery.sh", "G935");
		ui_print("-- Done");
	endif;
		
	if is_substring("G930", getprop("ro.boot.bootloader")) then
		ui_print("-- G930 S7 Flat");
		run_program("/tmp/ts/flash_recovery.sh", "G930");
		ui_print("-- Done");
	endif;
endif;

####################################################
# ROOT
####################################################
set_progress(0.10);

ui_print(" ");
ui_print("@Root");

# Without Root
if file_getprop("/tmp/aroma/menu.prop", "group1") == "opt1" then

	ui_print("-- Without Root");
	if file_getprop("/tmp/aroma/menu.prop", "chk7") == "1" then
		ui_print("-- Clear root data...");
		run_program("/tmp/ts/clean_supersu.sh");
		run_program("/tmp/ts/clean_magisk.sh");
		run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.supersu", "-asd");
		run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.suhide", "-asd");
		run_program("/tmp/ts/ts_clean.sh", "com.topjohnwu.magisk", "-asd");
	endif;
endif;

# Magisk Root
if file_getprop("/tmp/aroma/menu.prop", "group1") == "opt2" then
show_progress(0.85, "-19000");
	
	# Clean opposite kernel
	run_program("/tmp/ts/clean_supersu.sh");
	run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.supersu", "-asd");
	run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.suhide", "-asd");

	if file_getprop("/tmp/aroma/menu.prop", "chk7") == "1" then
		ui_print("-- Clearing root data...");
		run_program("/tmp/ts/clean_magisk.sh");
		run_program("/tmp/ts/ts_clean.sh", "com.topjohnwu.magisk", "-asd");
	endif;
		
	ui_print("-- Rooting with Magisk Manager...");
	ui_print(" ");
	package_extract_dir("magisk", "/tmp/magisk");
	run_program("/sbin/busybox", "unzip", "/tmp/magisk/magisk.zip", "META-INF/com/google/android/*", "-d", "/tmp/magisk");
	run_program("/sbin/sh", "/tmp/magisk/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/magisk/magisk.zip");
	delete_recursive("/tmp/magisk");
endif;

# SuperSU Root
if file_getprop("/tmp/aroma/menu.prop", "group1") == "opt3" then
show_progress(0.85, "-34000");
	
	# Clean opposite kernel
	run_program("/tmp/ts/clean_magisk.sh");
	run_program("/tmp/ts/ts_clean.sh", "com.topjohnwu.magisk", "-asd");

	if file_getprop("/tmp/aroma/menu.prop", "chk7") == "1" then
		ui_print("-- Clearing root data...");
		run_program("/tmp/ts/clean_supersu.sh");
		run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.supersu", "-asd");
		run_program("/tmp/ts/ts_clean.sh", "eu.chainfire.suhide", "-asd");
	endif;	

	run_program("/tmp/ts/supersu.sh");
	
	ui_print("-- Rooting with SuperSU...");
	package_extract_dir("supersu", "/tmp/supersu");
	run_program("/sbin/busybox", "unzip", "/tmp/supersu/supersu.zip", "META-INF/com/google/android/*", "-d", "/tmp/supersu");
	run_program("/sbin/sh", "/tmp/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/supersu/supersu.zip");
	delete_recursive("/tmp/supersu");

	ui_print(" ");
	ui_print("-- Installing Suhide...");
	package_extract_dir("suhide", "/tmp/suhide");
	run_program("/sbin/busybox", "unzip", "/tmp/suhide/suhide.zip", "META-INF/com/google/android/*", "-d", "/tmp/suhide");
	run_program("/sbin/sh", "/tmp/suhide/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/suhide/suhide.zip");
	delete_recursive("/tmp/suhide");
endif;

run_program("/tmp/ts/tskernel.sh");

ui_print(" ");
ui_print("@Setting Permissions...");
set_metadata("/system/vendor/lib/libsecure_storage.so", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib64/libsecure_storage.so", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
#set_metadata("/system/vendor/lib/egl/libGLES_mali.so", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
#set_metadata("/system/vendor/lib64/egl/libGLES_mali.so", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/bcm4359C0_murata.hcd", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/bcm4359C0_semco.hcd", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/fimc_is_fw2_2l1.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/fimc_is_fw2_2l1_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/fimc_is_fw2_imx260.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/fimc_is_fw2_imx260_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_2l1_master_setfile.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_2l1_master_setfile_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_2l1_mode_setfile.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_2l1_mode_setfile_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_fw_2l1.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_fw_2l1_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_fw_imx260.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_fw_imx260_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_imx260_master_setfile.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_imx260_master_setfile_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_imx260_mode_setfile.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/companion_imx260_mode_setfile_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware//mfc_fw.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/ois_fw_dom.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/ois_fw_sec.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/seiren_fw_dram.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/seiren_fw_sram.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/setfile_2l1.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/setfile_2l1_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/setfile_4e6.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware//setfile_4e6_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/setfile_imx260.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/setfile_imx260_d.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/nfc/sec_s3nrn81_firmware.bin", "uid", 0, "gid", 2000, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");

set_metadata_recursive("/system/priv-app/PersonalPageService", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");

set_metadata("/system/bin/logd", "uid", 1036, "gid", 1036, "mode", 0550, "capabilities", 0x440000040, "selabel", "u:object_r:logd_exec:s0");

#--PERMISSION
ui_print("-- Fixing permission...");
package_extract_file("ts/fix_permissions", "/tmp/ts/fix_permissions");
set_perm(0, 0, 0777, "/tmp/ts/fix_permissions");
run_program("/tmp/ts/fix_permissions");

# INSTALL ADB
# -----------
if file_getprop("/tmp/aroma/menu.prop", "chk11") == "1" then
	ui_print(" ");
	ui_print("@ThunderStormS Installing ADB...");
	package_extract_dir("ts/adb", "/tmp/adb");
	run_program("/sbin/busybox", "unzip", "/tmp/adb/adb.zip", "META-INF/com/google/android/*", "-d", "/tmp/adb");
	run_program("/sbin/sh", "/tmp/adb/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/adb/adb.zip");
	delete_recursive("/tmp/adb");
endif;

#####################################################

ui_print(" ");
ui_print("-- Unmounting Partition...");
delete_recursive("/tmp");

set_progress(1.00);
ui_print(" ");
ui_print("*******************************************************************");
ui_print("***  The ThundeRStormS kernel and mods are installed  ***");
ui_print("*******************************************************************");
ui_print(" ");

